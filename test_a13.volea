# This is the test assembly code for asm test A13.
# Template pattern to make sure the SuperClass dispatches
# to the SubClass

.actor SuperClass
..constants
  C0 : uint := 0
  C1 : uint := 1
  C2 : uint := 2
  C3 : uint := 3
  C4 : uint := 4
  C5 mdef Message_2
  C6 mdef Run_It
  C7 : str := "Recorder"
..message CONSTRUCTOR
  SET A0 := C0
  TRAP L0 := C7 => C1 # send 1 to the Recorder trap
  REPLY C0
  STOP_FRAME
..message Message_2
  SET A0 := C0
  TRAP L2 := C7 => C2 # send 2 to the Recorder trap
  REPLY C2
  STOP_FRAME
..message Run_It
  TRAP L0 := C7 => C3 # send 3 to the Recorder trap
  REPLY C3
  STOP_FRAME
..message Template
  Self_Call L0 := C0 => C5 # Message_2
  Self_Call L1 := C0 => C6 # Run_It
  REPLY C4
  STOP_FRAME

.actor SubClass
..subclassof SuperClass
..constants
  # The SuperClass constants must be repeated verbatim
  C0 : uint := 0
  C1 : uint := 1
  C2 : uint := 2
  C3 : uint := 3
  C4 : uint := 4
  C5 mdef Message_2
  C6 mdef Run_It
  C7 : str := "Recorder"
  # end of repeat
  C8 : mdef := CONSTRUCTOR
..message CONSTRUCTOR
  Super_Call L1 := C0 => C8 # super CONSTRUCTOR
  REPLY C0
  STOP_FRAME
..message Run_It
  TRAP L0 := C7 => C4 # send 4 to the Recorder trap
  REPLY C0
  STOP_FRAME

.actor Test_A13
..constants
  C0 : uint := 0
  C1 : uint := 1
  C2 : uint := 2
  C3 : uint := 3
  C4 adef SubClass
  C5 mdef Template
..message CONSTRUCTOR
  REPLY C0
  STOP_FRAME
..message Go
  NEW_ACTOR L0 := C1 => C4
  ACTOR_CALL L1 := C0 => L0 . C5 # send Template
  PEEK L2 := L1 => C0
  REPLY C0
  STOP_FRAME

