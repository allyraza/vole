.actor Baton
 F0 uint 0
 F1 uint 1
 F2 adef Baton
 F3 mdef Link
 F4 mdef Pass
 F5 uint 5
 F6 uint 8
 F7 uint 9
 F8 str "Starting The Baton..."
 F9 uint 13
 F10 str "Baton rounds:"
 F11 uint 2
 F12 uint 6

..message Link
  # S0 is the first in the circle
  # S1 is the current count: if 1, link to S0, else create a next and give it S1-1
  # if I am not the last in the link
  BRANCH_EQ F F S1 F1 F6
  # then
  ADD L0 I0 F1
  NEW_ACTOR I1 F2 L0
  SET L1 S0
  SUBTRACT L2 S1 F1
  FOLD L3 L1 F11
  SEND F F L3 I1 F3
  JUMP F7
  # else
  SET I1 S0
  # end if
  BRANCH_EQ T F I0 F1 F9
   TRAP L9 F1 F8
   FOLD L4 F1 F1
   SEND F F L4 I1 F4
  REPLY F0
  STOP_FRAME

..message Pass
  SET L1 S0
  BRANCH_EQ T F I0 F1 F12
   SET L0 F10
   FOLD L2 L0 F11
   TRAP L3 F1 L2
   ADD L1 S0 F1
  FOLD L4 L1 F1
  SEND F F L4 I1 F4
  REPLY F0
  STOP_FRAME

..message CONSTRUCTOR
  SET I0 S0
  REPLY F0
  STOP_FRAME

.actor Main
 F0 uint 0
 F1 uint 1
 F2 adef Baton
 F3 mdef Link
 F4 uint 2

..message Go
  EMIT S0
  NEW_ACTOR L0 F2 F1
  SET L1 S0
  FOLD L2 L0 F4
  SEND F F L2 L0 F3
  REPLY F0
  STOP_FRAME

..message CONSTRUCTOR
  REPLY F0
  STOP_FRAME
